// <auto-generated />
using System;
using BugTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BugTracker.Migrations
{
    [DbContext(typeof(BugTrackerContext))]
    [Migration("20210519080638_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BugTracker.Data.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BugTracker.Data.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubmittedById")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OfProjectId");

                    b.HasIndex("SubmittedById");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BugTracker.Data.Entities.TicketHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChangedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValueString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValueString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyChanged")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketHistory");
                });

            modelBuilder.Entity("BugTracker.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TicketId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BugTracker.Data.Entities.Ticket", b =>
                {
                    b.HasOne("BugTracker.Data.Entities.Project", "OfProject")
                        .WithMany("AttachedTickets")
                        .HasForeignKey("OfProjectId");

                    b.HasOne("BugTracker.Data.Entities.User", "SubmittedBy")
                        .WithMany()
                        .HasForeignKey("SubmittedById");

                    b.Navigation("OfProject");

                    b.Navigation("SubmittedBy");
                });

            modelBuilder.Entity("BugTracker.Data.Entities.TicketHistory", b =>
                {
                    b.HasOne("BugTracker.Data.Entities.User", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");

                    b.HasOne("BugTracker.Data.Entities.Ticket", null)
                        .WithMany("History")
                        .HasForeignKey("TicketId");

                    b.Navigation("ChangedByUser");
                });

            modelBuilder.Entity("BugTracker.Data.Entities.User", b =>
                {
                    b.HasOne("BugTracker.Data.Entities.Project", null)
                        .WithMany("AssignedUsers")
                        .HasForeignKey("ProjectId");

                    b.HasOne("BugTracker.Data.Entities.Ticket", null)
                        .WithMany("AssignedTo")
                        .HasForeignKey("TicketId");
                });

            modelBuilder.Entity("BugTracker.Data.Entities.Project", b =>
                {
                    b.Navigation("AssignedUsers");

                    b.Navigation("AttachedTickets");
                });

            modelBuilder.Entity("BugTracker.Data.Entities.Ticket", b =>
                {
                    b.Navigation("AssignedTo");

                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
